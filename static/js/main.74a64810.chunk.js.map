{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","Component","constructor","props","super","this","state","hasError","componentDidCatch","erroe","info","setState","render","children","Scroll","style","overflow","height","width","margin","App","onSearchChange","event","searchField","target","value","componentDidMount","fetch","response","json","users","filteredFriends","filter","toLowerCase","includes","length","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sNAYeA,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,M,MCgBCS,MArBFN,IAAsB,IAArB,GAACO,EAAE,KAAEC,EAAI,MAACC,GAAMT,EAG1B,OAGMU,IAAAC,cAAA,OAAKC,UAAU,uDACbF,IAAAC,cAAA,OAAKE,IAAI,cAAcC,IAAG,wBAAAC,OAA2BR,EAAE,cACvDG,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,IAAEH,GACNE,IAAAC,cAAA,SAAIF,MCiCLO,MAxCEhB,IAAc,IAAb,OAACiB,GAAOjB,EAetB,OACIU,IAAAC,cAAA,WAKIM,EAAOC,IAAI,CAACC,EAAMC,IAEdV,IAAAC,cAACL,EAAI,CACLe,IAAMD,EACLb,GAAMU,EAAOG,GAAGb,GACfC,KAAOS,EAAOG,GAAGZ,KACjBC,MAASQ,EAAOG,GAAGX,WCjBtBa,MAbGtB,IAAkC,IAAjC,YAACuB,EAAW,aAAEC,GAAaxB,EAC1C,OACIU,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,SACAC,UAAU,oCACVa,KAAK,SAASC,YAAY,iBAC1BC,SAAYH,M,MCNxB,MAAMI,UAAsBC,YAExBC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,CAETC,UAAU,GAKlBC,kBAAkBC,EAAMC,GACpBL,KAAKM,SAAS,CAACJ,UAAU,IAK7BK,SAEI,OAAGP,KAAKC,MAAMC,SAENzB,IAAAC,cAAA,UAAI,wBAGLsB,KAAKF,MAAMU,UAIXb,QCbCc,MAhBCX,GAETrB,IAAAC,cAAA,OAAKgC,MACD,CACJC,SAAU,SACRC,OAAQ,QACRC,MAAO,MACPC,OAAQ,SAGLhB,EAAMU,UCJnB,MAAMO,UAAYnB,YACdC,cACIE,QAAQ,KAiBZiB,eAAkBC,IACdjB,KAAKM,SAAS,CAACY,YAAaD,EAAME,OAAOC,SAjBzCpB,KAAKC,MAAQ,CACTjB,OAAQ,GAChBkC,YAAa,IAKbG,oBACIC,MAAM,8CACLxD,KAAKyD,GAAYA,EAASC,QAE1B1D,KAAK2D,IAAUzB,KAAKM,SAAS,CAACtB,OAAOyC,MAW1ClB,SAEI,MAAM,OAACvB,EAAM,YAAEkC,GAAelB,KAAKC,MAE7ByB,EAAkB1C,EAAO2C,OAAQ3C,GAC5BA,EAAOT,KAAKqD,cAAcC,SAASX,EAAYU,gBAE1D,OAAQ5C,EAAO8C,OAGXrD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,oBACnBF,IAAAC,cAACW,EAAS,CAACE,aAAgBS,KAAKgB,iBAChCvC,IAAAC,cAAC+B,EAAM,KACHhC,IAAAC,cAACiB,EAAa,KAClBlB,IAAAC,cAACK,EAAQ,CAACC,OAAU0C,OAPxBjD,IAAAC,cAAA,UAAI,YAeDqC,QChDFgB,IAASC,WAAWC,SAASC,eAAe,SACpD3B,OACH9B,IAAAC,cAACD,IAAM0D,WAAU,KAEjB1D,IAAAC,cAACqC,EAAG,QAsDNpD,K","file":"static/js/main.74a64810.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = ({id, name,email}) =>{\n\n    \n    return(\n        \n        \n          <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"profile-pic\" src= {`https://robohash.org/${id}?100x100`} />\n            <div>\n                <h2> {name}</h2>\n                <p>{email}</p>\n             </div>\n          </div>\n        \n             \n            \n\n\n    );\n}\n\nexport default Card;"," import React from \"react\";\n\nimport Card from \"./Card\";\n\n\nconst CardList = ({robots}) =>{\n\n    // if(true){\n    //     throw new Error(\"Oops!\");\n    // }\n\n    //  const cardsArray = robots.map((user, i) => {\n    //     return (\n    //     <Card \n    //     key ={i}\n    //      id = {robots[i].id}\n    //       name ={robots[i].name} \n    //       email = {robots[i].email }\n    //       />);\n    //  })\n    return(\n        <div>\n            {\n            \n            /* {cardsArray} */\n            \n            robots.map((user, i) => {\n                return (\n                <Card \n                key ={i}\n                 id = {robots[i].id}\n                  name ={robots[i].name} \n                  email = {robots[i].email }\n                  />);\n             })\n            \n            }\n\n            \n        \n        </div>\n\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return(\n        <div className=\"pa2\">\n            <input \n            className=\"pa3 ba b--green bg-lightest-blue \"\n            type=\"search\" placeholder=\"Search friends\"\n            onChange = {searchChange} \n            />\n            \n        </div>\n\n    );\n}\nexport default SearchBox;","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n\n            hasError: false\n        }\n\n         \n    }\n    componentDidCatch(erroe,info){\n        this.setState({hasError: true});\n\n    }\n\n\n    render()\n    {\n        if(this.state.hasError){\n            return(\n                <h1>Something went wrong</h1>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;"," import React from \"react\";\n const Scroll = (props) =>{\n    return (\n        <div style={\n            { \n        overflow: 'scroll',\n          height: '500px',\n          width: '98%',\n          margin: '10px'\n        }\n          }>\n            {props.children}\n        </div>\n\n    );\n };\n\n export default Scroll;","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport './App.css'\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n    searchField: ''\n\n        }\n    }\n     \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        // .then(users => {})\n        .then(users => {this.setState({robots:users})}) ;\n\n    }\n\n \n    onSearchChange = (event) => {\n        this.setState({searchField: event.target.value});\n        \n       \n      \n    }\n    render(){\n\n        const {robots, searchField} = this.state;\n\n        const filteredFriends = robots.filter( robots =>{\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\n        });\n        return !robots.length ?\n            <h1>Loading</h1> :\n        \n            <div className=\"tc\">\n                <h1 className=\"f1\">N10-Labs Friends</h1>\n                <SearchBox searchChange = {this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary> \n                <CardList robots = {filteredFriends}/>\n                </ErrorBoundary>\n                </Scroll>\n            </div>\n        ;}\n        \n    }\n   \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n\n  <App/>\n\n  </React.StrictMode>\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     {/* props-properties */}\n//     <Hello greeting = {'Hello React Ninja'}\n//            company = {'From N10-Labs!!!'}\n          \n//           />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}